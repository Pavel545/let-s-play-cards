{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA,cAAc;AACd,eAAe;AACf;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjBA,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6BAA6B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+BAA+B,yBAAyB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sCAAsC;AAC1D;AACA;AACA;AACA,8BAA8B,yBAAyB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;;;AAIL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;ACxUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,KAAK,GAAG,IAAI;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;ACpJA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;;;;;;;UCzCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;ACNsB;AACH;AACD;AACK;AACA","sources":["webpack://playing-cards/./src/js/application.js","webpack://playing-cards/./src/js/block_layout.js","webpack://playing-cards/./src/js/game_process.js","webpack://playing-cards/./src/js/request.js","webpack://playing-cards/./src/js/template.js","webpack://playing-cards/webpack/bootstrap","webpack://playing-cards/webpack/runtime/compat get default export","webpack://playing-cards/webpack/runtime/define property getters","webpack://playing-cards/webpack/runtime/hasOwnProperty shorthand","webpack://playing-cards/webpack/runtime/make namespace object","webpack://playing-cards/./src/js/index.js"],"sourcesContent":["window.complexity = ''\nwindow.application = {\n    blocks: {},\n    screens: {},\n    renderScreen: function (screenName) {\n        window.application.screens[screenName]()\n    },\n    renderBlock: function (blockName, container, cls, content, attrs) {\n        window.application.blocks[blockName](container, cls, content, attrs)\n    },\n    timers: [],\n}\nwindow.deckID = [\n    6.1, 7.1, 8.1, 9.1, 10.1, 11.1, 12.1, 13.1, 14.1, 6.2, 7.2, 8.2, 9.2, 10.2,\n    11.2, 12.2, 13.2, 14.2, 6.3, 7.3, 8.3, 9.3, 10.3, 11.3, 12.3, 13.3, 14.3,\n    6.4, 7.4, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4,\n]\nwindow.time ='00:00'\n","function renderExampleDiv({ container, cls, content }) {\n    const div = {\n        tag: 'div',\n        cls,\n        content,\n    };\n    container.appendChild(templateEngine(div));\n}\nwindow.application.blocks['example-div'] = renderExampleDiv;\nfunction renderExampleButtonFalse({ container, cls, content, id }) {\n    const div = {\n        tag: 'div',\n        cls,\n        content,\n        attrs: {\n            id,\n        },\n    };\n    container.appendChild(templateEngine(div));\n}\nwindow.application.blocks['example-false'] = renderExampleButtonFalse;\nfunction renderExampleButton({ container, cls, content }) {\n    const button = {\n        tag: 'button',\n        cls,\n        content,\n    };\n    container.appendChild(templateEngine(button));\n}\nwindow.application.blocks['example-button'] = renderExampleButton;\n\nfunction renderExampleScreenStart() {\n    const app = document.querySelector('.app');\n    app.innerHTML='';\n    window.application.renderBlock('example-div', {\n        container: app,\n        cls: 'main',\n        content: '',\n    });\n    const main = app.querySelector('.main');\n    window.application.renderBlock('example-div', {\n        container: main,\n        cls: 'complexity',\n        content: '',\n    });\n\n    const div = main.querySelector('.complexity');\n    window.application.renderBlock('example-div', {\n        container: div,\n        cls: 'complexity_text',\n        content: 'Выбери сложность',\n    });\n    window.application.renderBlock('example-div', {\n        container: div,\n        cls: 'complexity_choice_area',\n        content: '',\n    });\n\n    const complexity_choice_area = div.querySelector('.complexity_choice_area');\n    window.application.renderBlock('example-false', {\n        container: complexity_choice_area,\n        cls: ['complexity_choice_button'],\n        content: '1',\n        id: 'easy',\n    });\n    window.application.renderBlock('example-false', {\n        container: complexity_choice_area,\n        cls: ['complexity_choice_button'],\n        content: '2',\n        id: ['average'],\n    });\n    window.application.renderBlock('example-false', {\n        container: complexity_choice_area,\n        cls: ['complexity_choice_button'],\n        content: '3',\n        id: ['difficult'],\n    });\n\n    window.application.renderBlock('example-button', {\n        container: div,\n        cls: 'complexity_button',\n        content: 'Старт',\n    });\n}\nwindow.application.screens['example'] = renderExampleScreenStart;\nfunction renderExampleImg({ container, cls, id, src }) {\n    const img = {\n        tag: 'img',\n        cls: cls,\n        attrs: {\n            id: id,\n            src: src,\n        },\n    };\n    container.appendChild(templateEngine(img));\n}\nwindow.application.blocks['example-img'] = renderExampleImg;\n\nfunction renderExampleScreenGameShirt() {\n    const app = document.querySelector('.app');\n    const deck = app.querySelector('.deck');\n    deck.innerHTML = '';\n    const arr = easy();\n    window.deckT.forEach((index) => {\n        window.application.renderBlock('example-img', {\n            container: deck,\n            cls: 'deck_cards_shirt',\n            id: arr[index],\n            src: './src/js/Img/shirt.jpg',\n        });\n    });\n}\nwindow.application.screens['gameShirt'] = renderExampleScreenGameShirt;\nfunction renderExampleScreenGameDisplay() {\n    const app = document.querySelector('.app');\n    app.innerHTML = '';\n    window.application.renderBlock('example-div', {\n        container: app,\n        cls: 'startGame',\n        content: '',\n    });\n    const main = app.querySelector('.startGame');\n    window.application.renderBlock('example-div', {\n        container: main,\n        cls: 'head',\n        content: '',\n    });\n    const head = main.querySelector('.head');\n    window.application.renderBlock('example-div', {\n        container: head,\n        cls: 'head_timer',\n        content: '',\n    });\n    const timer = main.querySelector('.head_timer');\n    window.application.renderBlock('example-div', {\n        container: timer,\n        cls: 'head_timer_box',\n        content: '',\n    });\n    const box = main.querySelector('.head_timer_box');\n\n    window.application.renderBlock('example-div', {\n        container: box,\n        cls: 'head_timer_type',\n        content: 'min',\n    });\n    window.application.renderBlock('example-div', {\n        container: box,\n        cls: 'head_timer_type',\n        content: 'sek',\n    });\n    window.application.renderBlock('example-div', {\n        container: timer,\n        cls: 'head_timer_counter',\n        content: '00.00',\n    });\n    window.application.renderBlock('example-button', {\n        container: head,\n        cls: 'head_button',\n        content: 'Начать заново ',\n    });\n    window.application.renderBlock('example-div', {\n        container: main,\n        cls: 'deck',\n        content: '',\n    });\n    const deck = main.querySelector('.deck');\n\n}\nwindow.application.screens['gameDisplay'] = renderExampleScreenGameDisplay;\nfunction renderExampleComplexity() {\n    const app = document.querySelector('.app');\n    const main = app.querySelector('.startGame');\n    const deck = main.querySelector('.deck');\n    let arr = [];\n    arr = complexityS(window.complexity);\n    console.log(arr);\n    arr.forEach((element, index) => {\n        window.application.renderBlock('example-img', {\n            container: deck,\n            cls: 'deck_cards_shirt',\n            id: arr[index],\n            src: `./src/js/Img/${element}.png`,\n        });\n    });\n    window.deckT = deck.querySelectorAll('.deck_cards_shirt');\n}\nwindow.application.screens['gameComplexity'] = renderExampleComplexity;\nfunction complexityS(arr) {\n    switch (arr) {\n        case 'easy':\n            return easy();\n        case 'average':\n            return average();\n        case 'difficult':\n            return difficult();\n        default:\n            break;\n    }\n}\nfunction easy() {\n    return createCards(3);\n}\nfunction shuffle(arr) {\n    for (let i = arr.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr\n}\nconst createCards = (count) => {\n    let arr = [];\n    let counter = 0;\n    for (let i = 0; i < 10; i += 9) {\n    for (let j = 0; j < count; j++) {\n    arr[counter] = window.deckID[j + i];\n    counter++;\n    }\n    }\n    return shuffle(arr)\n}\nfunction average() {\n    return createCards(6);\n}\nfunction difficult() {\n    return createCards(9);\n}\nfunction renderScreen() {\n    for (let i = 0; i < window.application.timers.length; i++) {\n      clearInterval(window.application.timers[i]);\n    }\n}\nfunction renderExampleAlink({ container, cls, content }) {\n    const a = {\n        tag: 'a',\n        cls,\n        content,\n    };\n    container.appendChild(templateEngine(a));\n}\nwindow.application.blocks['example-link'] = renderExampleAlink;\n\nfunction renderExampleScreenLost() {\n    const app = document.querySelector('.app');\n    window.application.renderBlock('example-div', {\n        container: app,\n        cls: 'overlay',\n        content: '',\n    });\n    const overlay = app.querySelector('.overlay')\n    window.application.renderBlock('example-div', {\n        container: overlay,\n        cls: 'popUpScreen',\n        content: '',\n    });\n    const popUpScreen = app.querySelector('.popUpScreen')\n    window.application.renderBlock('example-img', {\n        container: popUpScreen,\n        cls: 'popUpScreen_img_lost',\n        id: 'loser',\n        src: `./src/js/Img/loser.png`,\n    });\n    window.application.renderBlock('example-div', {\n        container: popUpScreen,\n        cls: 'popUpScreen_result',\n        content: 'Вы проиграли!',\n    });\n    window.application.renderBlock('example-div', {\n        container: popUpScreen,\n        cls: 'popUpScreen_time',\n        content: 'Затраченное время:',\n    });\n    window.application.renderBlock('example-div', {\n        container: popUpScreen,\n        cls: 'popUpScreen_time_counter',\n        content: window.time,\n    });\n    window.application.renderBlock('example-button', {\n        container: popUpScreen,\n        cls: 'head_button',\n        content: 'Начать снова ',\n    });\n\n\n\n}\nwindow.application.screens['gameLost'] = renderExampleScreenLost;\nfunction renderExampleScreenWin() {\n    const app = document.querySelector('.app');\n    window.application.renderBlock('example-div', {\n        container: app,\n        cls: 'overlay',\n        content: '',\n    });\n    const overlay = app.querySelector('.overlay')\n    window.application.renderBlock('example-div', {\n        container: overlay,\n        cls: 'popUpScreen',\n        content: '',\n    });\n    const popUpScreen = app.querySelector('.popUpScreen')\n    window.application.renderBlock('example-img', {\n        container: popUpScreen,\n        cls: 'popUpScreen_img_lost',\n        id: 'loser',\n        src: `./src/js/Img/win.png`,\n    });\n    window.application.renderBlock('example-div', {\n        container: popUpScreen,\n        cls: 'popUpScreen_result',\n        content: 'Вы выиграли!',\n    });\n    window.application.renderBlock('example-div', {\n        container: popUpScreen,\n        cls: 'popUpScreen_time',\n        content: 'Затраченное время:',\n    });\n    window.application.renderBlock('example-div', {\n        container: popUpScreen,\n        cls: 'popUpScreen_time_counter',\n        content: window.time,\n    });\n    window.application.renderBlock('example-button', {\n        container: popUpScreen,\n        cls: 'head_button',\n        content: 'Начать снова ',\n    });\n}\nwindow.application.screens['gameWin'] = renderExampleScreenWin;\n","const app = document.querySelector('.app');\nlet sec = 0;\nlet min = 0;\nfunction newGame() {\n    renderScreen();\n    sec = 0;\n    min = 0;\n    window.application.renderScreen('example');\n\n    const complexity = app.querySelectorAll('.complexity_choice_button');\n\n    complexity.forEach((control) => {\n        control.addEventListener('click', () => {\n            console.log(control.id);\n            window.complexity = control.id;\n        });\n    });\n\n    const start = app.querySelector('.complexity_button');\n    start.addEventListener('click', () => {\n        if (window.complexity === '') {\n            alert('Пожалуста, выберите сложность');\n            return;\n        }\n        startGame();\n    });\n}\nnewGame();\n\nfunction startGame() {\n    window.time = '';\n    window.application.renderScreen('gameDisplay');\n\n    window.application.renderScreen('gameComplexity');\n\n    setTimeout(() => {\n        window.application.renderScreen('gameShirt');\n        progressGame();\n\n        window.application.timers.push(setInterval(timer, 1000));\n    }, 5000);\n    const head = app.querySelector('.head');\n    const butter = head.querySelector('.head_button');\n\n    butter.addEventListener('click', () => {\n        newGame();\n        window.time = '00:00';\n        return;\n    });\n}\n\n\nfunction timer() {\n    const head_timer_counter = app.querySelector('.head_timer_counter');\n    //renderScreen();\n    sec++;\n    if (sec > 59) {\n        min++;\n        sec = 0;\n    }\n    head_timer_counter.textContent = `${min} :${sec}`;\n}\nfunction progressGame() {\n    const main = app.querySelector('.startGame');\n    const deck = main.querySelector('.deck');\n    let cards = deck.querySelectorAll('.deck_cards_shirt');\n\n    let counters = 0;\n    let countersWin = 0;\n    let previous;\n    console.log(cards);\n    cards.forEach((control, index) => {\n        control.addEventListener('click', () => {\n            if (counters > 0 && previous.id[0] === window.deckT[index].id[0]) {\n                // alert('ók')\n                counters = -1;\n                previous = '';\n            }\n            if (\n                counters > 0 &&\n                previous.id[0] != window.deckT[index].id[0] &&\n                previous != ''\n            ) {\n                const head_timer_counter = app.querySelector(\n                    '.head_timer_counter'\n                );\n                window.time = head_timer_counter.textContent;\n                loser();\n                renderScreen();\n                return;\n            }\n\n            previous = window.deckT[index];\n            cards[index].src = window.deckT[index].src;\n            counters++;\n            countersWin++;\n            if (countersWin === 6 && window.complexity === 'easy') {\n                const head_timer_counter = app.querySelector(\n                    '.head_timer_counter'\n                );\n                window.time = head_timer_counter.textContent;\n                Win();\n                renderScreen();\n                return;\n            }\n            if (countersWin === 12 && window.complexity === 'average') {\n                const head_timer_counter = app.querySelector(\n                    '.head_timer_counter'\n                );\n                window.time = head_timer_counter.textContent;\n                Win();\n                renderScreen();\n                return;\n            }\n            if (countersWin === 18 && window.complexity === 'difficult') {\n                const head_timer_counter = app.querySelector(\n                    '.head_timer_counter'\n                );\n                window.time = head_timer_counter.textContent;\n                Win();\n                renderScreen();\n                return;\n            }\n        });\n    });\n    console.log(window.deckT);\n}\nfunction loser() {\n    window.application.renderScreen('gameLost');\n    const popUpScreen = app.querySelector('.popUpScreen');\n    const butter = popUpScreen.querySelector('.head_button');\n\n    butter.addEventListener('click', () => {\n        newGame();\n        window.time = '00:00';\n        return;\n    });\n}\nfunction Win() {\n    window.application.renderScreen('gameWin');\n    const popUpScreen = app.querySelector('.popUpScreen');\n    const butter = popUpScreen.querySelector('.head_button');\n\n    butter.addEventListener('click', () => {\n        newGame();\n        window.time = '00:00';\n        return;\n    });\n}\n","const noop = () => {}\n\nfunction request({\n    method = 'GET',\n    url,\n    type = 'json',\n    checkStatusInResponse = false,\n    onSuccess = noop,\n    onError = noop,\n}) {\n    const req = new XMLHttpRequest()\n\n    req.open(method, url)\n    req.responseType = type\n\n    req.onload = function (event) {\n        const target = event.target\n\n        if (target.status !== 200) {\n            onError(target.statusText)\n            return\n        }\n\n        if (checkStatusInResponse && target.response.status !== 'ok') {\n            onError(target.statusText)\n            return\n        }\n        onSuccess(target.response)\n    }\n    req.onerror = function () {\n        onError()\n    }\n    req.send()\n}\n","function templateEngine(block) {\n    if (block === undefined || block === null || block === false) {\n        return document.createTextNode('')\n    }\n    if (\n        typeof block === 'string' ||\n        typeof block === 'number' ||\n        block === true\n    ) {\n        return document.createTextNode(block)\n    }\n    if (Array.isArray(block)) {\n        const fragment = document.createDocumentFragment()\n\n        block.forEach((element) => {\n            fragment.appendChild(templateEngine(element))\n        })\n\n        return fragment\n    }\n\n    const result = document.createElement(block.tag)\n\n    if (block.cls) {\n        const classes = [].concat(block.cls)\n        classes.forEach((cls) => {\n            result.classList.add(cls)\n        })\n    }\n\n    if (block.attrs) {\n        const keys = Object.keys(block.attrs)\n\n        keys.forEach((key) => {\n            result.setAttribute(key, block.attrs[key])\n        })\n    }\n\n    result.appendChild(templateEngine(block.content))\n\n    return result\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"./application\"\r\nimport \"./template\"\r\nimport \"./request\"\r\nimport \"./block_layout\"\r\nimport \"./game_process\"\r\n"],"names":[],"sourceRoot":""}